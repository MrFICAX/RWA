(()=>{"use strict";var e=function(){function e(e){this.arr=[],this.numOf=0,this.i=this.numOf,this.maxNum=e,this.izabraniTakmicari=[]}return e.prototype.addTakmicar=function(e){this.numOf<this.maxNum&&(e.indeks=this.numOf++,this.arr.push(e))},e.prototype.getIzabraniTakmicari=function(){return this.izabraniTakmicari},e.prototype.getArr=function(){return this.arr},e.prototype.UpisiTakmicara=function(e){this.i==this.numOf&&(this.i=0);var t=this.container.querySelector(".l1");t.innerHTML=this.arr[this.i].getName(),(t=this.container.querySelector(".l2")).innerHTML=this.arr[this.i].getSurname(),(t=this.container.querySelector(".l3")).innerHTML=this.arr[this.i].getAge().toString()},e.prototype.draw=function(e){var t=this;this.container=e;var n=document.createElement("label");n.innerHTML="IME TAKMICARA:",n.className="labela",e.appendChild(n),(n=document.createElement("label")).className="l1",e.appendChild(n),(n=document.createElement("label")).innerHTML="PREZIME TAKMICARA:",n.className="labela",e.appendChild(n),(n=document.createElement("label")).className="l2",e.appendChild(n),(n=document.createElement("label")).innerHTML="GODINE:",n.className="labela",e.appendChild(n),(n=document.createElement("label")).className="l3",e.appendChild(n);var a=document.createElement("button");a.innerHTML="Promeni takmicara",a.onclick=function(n){t.UpisiTakmicara(e),t.i++},e.appendChild(a),(a=document.createElement("button")).innerHTML="Izaberi takmicara",a.onclick=function(e){t.IzaberiTakmicara()},e.appendChild(a),(a=document.createElement("button")).innerHTML="Pokreni trku takmicara",a.onclick=function(e){t.PokreniTrku()},e.appendChild(a);var i=document.createElement("label");i.className="labelaListe",i.innerHTML="Lista izabranih takmicara:",this.container.appendChild(i)},e.prototype.crtajText=function(e){document.querySelector(".labelaListe").innerHTML+=e.getName()+" "+e.getSurname()+"</br>"},e.prototype.IzaberiTakmicara=function(){""!==this.container.querySelector(".l1").innerHTML?(this.i==this.numOf&&(this.i=0),0===this.i?(this.getIzabraniTakmicari().push(this.arr[this.numOf-1]),this.crtajText(this.arr[this.numOf-1])):(this.getIzabraniTakmicari().push(this.arr[this.i-1]),this.crtajText(this.arr[this.i-1])),console.log(this.izabraniTakmicari)):alert("Promenite takmicara")},e.prototype.PokreniTrku=function(){this.izabraniTakmicari.forEach((function(e){e.TrkajSe()}))},e}(),t=function(e,t,n,a){return new(n||(n=Promise))((function(i,r){function o(e){try{u(a.next(e))}catch(e){r(e)}}function c(e){try{u(a.throw(e))}catch(e){r(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,c)}u((a=a.apply(e,t||[])).next())}))},n=function(e,t){var n,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function c(r){return function(c){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(i=2&r[0]?a.return:r[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,r[1])).done)return i;switch(a=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,a=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){o=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){o.label=r[1];break}if(6===r[0]&&o.label<i[1]){o.label=i[1],i=r;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(r);break}i[2]&&o.ops.pop(),o.trys.pop();continue}r=t.call(e,o)}catch(e){r=[6,e],a=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,c])}}},a=function(){function e(e,t,n){this.mapa=["start","ravnica","brdo","krivina levo","most","krivina desno","tunel","KRAJ"],this.num=0,this.name=e,this.surname=t,this.age=n}return e.prototype.getName=function(){return this.name},e.prototype.getSurname=function(){return this.surname},e.prototype.getAge=function(){return this.age},e.prototype.vratiPoziciju=function(e,a){return t(this,void 0,void 0,(function(){var t=this;return n(this,(function(n){return[2,new Promise((function(n,i){setTimeout((function(){t.num<t.mapa.length?n("Takmicar:"+t.getName()+" "+t.getSurname()+" se nalazi na mestu: "+t.mapa[t.num++]+" u trenutku: "+(Date.now()-a)/1e3):i("Takmicar: "+t.getName()+" "+t.getSurname()+" Zavrsio sam trku!")}),1e3*e)}))]}))}))},e.prototype.crtajKontejner=function(){var e=document.createElement("div");e.style.margin="30px",this.container=e,document.body.appendChild(e)},e.prototype.crtajText=function(e){var t=document.createElement("label");t.innerHTML+=e+"</br>",this.container.appendChild(t)},e.prototype.TrkajSe=function(){return t(this,void 0,void 0,(function(){var e,t,a,i,r;return n(this,(function(n){switch(n.label){case 0:e=10*Math.random()%3,this.crtajKontejner(),t=Date.now(),a=0,i=this.mapa,n.label=1;case 1:return a<i.length?(i[a],[4,this.vratiPoziciju(e,t)]):[3,4];case 2:r=n.sent(),this.crtajText(r),console.log(r),n.label=3;case 3:return a++,[3,1];case 4:return[2]}}))}))},e}(),i=new e(10),r=new a("Filip","Trajkovic",22),o=new a("Marko","Trifunovic",12),c=new a("Slavko","Markovic",32),u=new a("Stanislav","Stefanovic",25),l=new a("Stefan","Trajkoic",24),s=new a("Nikola","Slavkovic",13);i.addTakmicar(r),i.addTakmicar(o),i.addTakmicar(c),i.addTakmicar(u),i.addTakmicar(l),i.addTakmicar(s),console.log(i);var m=document.createElement("h1");m.className="Naslov",m.innerHTML="Aplikacija za trkanje takmicara",document.body.appendChild(m);var h=document.createElement("div");document.body.appendChild(h),h.className="div1",i.draw(h)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kb21hY2kxLy4vc3JjL0tsdWIudHMiLCJ3ZWJwYWNrOi8vZG9tYWNpMS8uL3NyYy9UYWttaWNhci50cyIsIndlYnBhY2s6Ly9kb21hY2kxLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbIktsdWIiLCJtYXhOdW0iLCJ0aGlzIiwiYXJyIiwibnVtT2YiLCJpIiwiaXphYnJhbmlUYWttaWNhcmkiLCJwcm90b3R5cGUiLCJhZGRUYWttaWNhciIsImNsYW4iLCJpbmRla3MiLCJwdXNoIiwiZ2V0SXphYnJhbmlUYWttaWNhcmkiLCJnZXRBcnIiLCJVcGlzaVRha21pY2FyYSIsImRpdiIsInBvbGplIiwiY29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCIsImdldE5hbWUiLCJnZXRTdXJuYW1lIiwiZ2V0QWdlIiwidG9TdHJpbmciLCJkcmF3IiwiX3RoaXMiLCJsYWJlbDEiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJhcHBlbmRDaGlsZCIsImR1Z21lIiwib25jbGljayIsImV2IiwiSXphYmVyaVRha21pY2FyYSIsIlBva3JlbmlUcmt1IiwibGFiZWxhIiwiY3J0YWpUZXh0IiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJhbGVydCIsImZvckVhY2giLCJlbCIsIlRya2FqU2UiLCJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInZhbHVlIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwiX19nZW5lcmF0b3IiLCJib2R5IiwiZiIsInkiLCJ0IiwiZyIsIl8iLCJsYWJlbCIsInNlbnQiLCJ0cnlzIiwib3BzIiwidmVyYiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwibiIsInYiLCJvcCIsIlR5cGVFcnJvciIsImNhbGwiLCJwb3AiLCJsZW5ndGgiLCJUYWttaWNhciIsIm5hbWUiLCJzdXJuYW1lIiwiYWdlIiwibWFwYSIsIm51bSIsInZyYXRpUG96aWNpanUiLCJicm9qIiwidnJlbWUiLCJfYSIsInNldFRpbWVvdXQiLCJEYXRlIiwibm93IiwiY3J0YWpLb250ZWpuZXIiLCJkaXZFbGVtZW50Iiwic3R5bGUiLCJtYXJnaW4iLCJzdGFydCIsIl9pIiwidGV4dCIsIl9iIiwiTWF0aCIsInJhbmRvbSIsImtsdWIiLCJ0MSIsInQyIiwidDMiLCJ0NCIsInQ1IiwidDYiLCJuYXNsb3YiXSwibWFwcGluZ3MiOiJtQkFBQSxJQUFJQSxFQUFzQixXQUN0QixTQUFTQSxFQUFLQyxHQUNWQyxLQUFLQyxJQUFNLEdBQ1hELEtBQUtFLE1BQVEsRUFDYkYsS0FBS0csRUFBSUgsS0FBS0UsTUFDZEYsS0FBS0QsT0FBU0EsRUFDZEMsS0FBS0ksa0JBQW9CLEdBcUc3QixPQW5HQU4sRUFBS08sVUFBVUMsWUFBYyxTQUFVQyxHQUMvQlAsS0FBS0UsTUFBUUYsS0FBS0QsU0FDbEJRLEVBQUtDLE9BQVNSLEtBQUtFLFFBQ25CRixLQUFLQyxJQUFJUSxLQUFLRixLQUd0QlQsRUFBS08sVUFBVUsscUJBQXVCLFdBQ2xDLE9BQU9WLEtBQUtJLG1CQUVoQk4sRUFBS08sVUFBVU0sT0FBUyxXQUNwQixPQUFPWCxLQUFLQyxLQUVoQkgsRUFBS08sVUFBVU8sZUFBaUIsU0FBVUMsR0FDbENiLEtBQUtHLEdBQUtILEtBQUtFLFFBQ2ZGLEtBQUtHLEVBQUksR0FDYixJQUFJVyxFQUFRZCxLQUFLZSxVQUFVQyxjQUFjLE9BQ3pDRixFQUFNRyxVQUFZakIsS0FBS0MsSUFBSUQsS0FBS0csR0FBR2UsV0FDbkNKLEVBQVFkLEtBQUtlLFVBQVVDLGNBQWMsUUFDL0JDLFVBQVlqQixLQUFLQyxJQUFJRCxLQUFLRyxHQUFHZ0IsY0FDbkNMLEVBQVFkLEtBQUtlLFVBQVVDLGNBQWMsUUFDL0JDLFVBQVlqQixLQUFLQyxJQUFJRCxLQUFLRyxHQUFHaUIsU0FBU0MsWUFFaER2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QyxLQUFLbEMsWUFBWWYsR0FDMUJBLEVBQUljLFVBQVksT0FDaEI4RSxFQUFLbkYsS0FBS1QsSSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgS2x1YiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEtsdWIobWF4TnVtKSB7XHJcbiAgICAgICAgdGhpcy5hcnIgPSBbXTtcclxuICAgICAgICB0aGlzLm51bU9mID0gMDtcclxuICAgICAgICB0aGlzLmkgPSB0aGlzLm51bU9mO1xyXG4gICAgICAgIHRoaXMubWF4TnVtID0gbWF4TnVtO1xyXG4gICAgICAgIHRoaXMuaXphYnJhbmlUYWttaWNhcmkgPSBbXTtcclxuICAgIH1cclxuICAgIEtsdWIucHJvdG90eXBlLmFkZFRha21pY2FyID0gZnVuY3Rpb24gKGNsYW4pIHtcclxuICAgICAgICBpZiAodGhpcy5udW1PZiA8IHRoaXMubWF4TnVtKSB7XHJcbiAgICAgICAgICAgIGNsYW4uaW5kZWtzID0gdGhpcy5udW1PZisrO1xyXG4gICAgICAgICAgICB0aGlzLmFyci5wdXNoKGNsYW4pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBLbHViLnByb3RvdHlwZS5nZXRJemFicmFuaVRha21pY2FyaSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pemFicmFuaVRha21pY2FyaTtcclxuICAgIH07XHJcbiAgICBLbHViLnByb3RvdHlwZS5nZXRBcnIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYXJyO1xyXG4gICAgfTtcclxuICAgIEtsdWIucHJvdG90eXBlLlVwaXNpVGFrbWljYXJhID0gZnVuY3Rpb24gKGRpdikge1xyXG4gICAgICAgIGlmICh0aGlzLmkgPT0gdGhpcy5udW1PZilcclxuICAgICAgICAgICAgdGhpcy5pID0gMDtcclxuICAgICAgICB2YXIgcG9samUgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLmwxXCIpO1xyXG4gICAgICAgIHBvbGplLmlubmVySFRNTCA9IHRoaXMuYXJyW3RoaXMuaV0uZ2V0TmFtZSgpO1xyXG4gICAgICAgIHBvbGplID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5sMlwiKTtcclxuICAgICAgICBwb2xqZS5pbm5lckhUTUwgPSB0aGlzLmFyclt0aGlzLmldLmdldFN1cm5hbWUoKTtcclxuICAgICAgICBwb2xqZSA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIubDNcIik7XHJcbiAgICAgICAgcG9samUuaW5uZXJIVE1MID0gdGhpcy5hcnJbdGhpcy5pXS5nZXRBZ2UoKS50b1N0cmluZygpO1xyXG4gICAgfTtcclxuICAgIEtsdWIucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiAoZGl2KSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGRpdjtcclxuICAgICAgICB2YXIgbGFiZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgIGxhYmVsMS5pbm5lckhUTUwgPSBcIklNRSBUQUtNSUNBUkE6XCI7XHJcbiAgICAgICAgbGFiZWwxLmNsYXNzTmFtZSA9IFwibGFiZWxhXCI7XHJcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGxhYmVsMSk7XHJcbiAgICAgICAgbGFiZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgIGxhYmVsMS5jbGFzc05hbWUgPSBcImwxXCI7XHJcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGxhYmVsMSk7XHJcbiAgICAgICAgbGFiZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgIGxhYmVsMS5pbm5lckhUTUwgPSBcIlBSRVpJTUUgVEFLTUlDQVJBOlwiO1xyXG4gICAgICAgIGxhYmVsMS5jbGFzc05hbWUgPSBcImxhYmVsYVwiO1xyXG4gICAgICAgIGRpdi5hcHBlbmRDaGlsZChsYWJlbDEpO1xyXG4gICAgICAgIGxhYmVsMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICBsYWJlbDEuY2xhc3NOYW1lID0gXCJsMlwiO1xyXG4gICAgICAgIGRpdi5hcHBlbmRDaGlsZChsYWJlbDEpO1xyXG4gICAgICAgIGxhYmVsMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICBsYWJlbDEuaW5uZXJIVE1MID0gXCJHT0RJTkU6XCI7XHJcbiAgICAgICAgbGFiZWwxLmNsYXNzTmFtZSA9IFwibGFiZWxhXCI7XHJcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGxhYmVsMSk7XHJcbiAgICAgICAgbGFiZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgIGxhYmVsMS5jbGFzc05hbWUgPSBcImwzXCI7XHJcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGxhYmVsMSk7XHJcbiAgICAgICAgdmFyIGR1Z21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgICAgICBkdWdtZS5pbm5lckhUTUwgPSBcIlByb21lbmkgdGFrbWljYXJhXCI7XHJcbiAgICAgICAgZHVnbWUub25jbGljayA9IGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICBfdGhpcy5VcGlzaVRha21pY2FyYShkaXYpO1xyXG4gICAgICAgICAgICBfdGhpcy5pKys7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBkaXYuYXBwZW5kQ2hpbGQoZHVnbWUpO1xyXG4gICAgICAgIGR1Z21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgICAgICBkdWdtZS5pbm5lckhUTUwgPSBcIkl6YWJlcmkgdGFrbWljYXJhXCI7XHJcbiAgICAgICAgZHVnbWUub25jbGljayA9IGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICBfdGhpcy5JemFiZXJpVGFrbWljYXJhKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBkaXYuYXBwZW5kQ2hpbGQoZHVnbWUpO1xyXG4gICAgICAgIGR1Z21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgICAgICBkdWdtZS5pbm5lckhUTUwgPSBcIlBva3JlbmkgdHJrdSB0YWttaWNhcmFcIjtcclxuICAgICAgICBkdWdtZS5vbmNsaWNrID0gZnVuY3Rpb24gKGV2KSB7XHJcbiAgICAgICAgICAgIF90aGlzLlBva3JlbmlUcmt1KCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBkaXYuYXBwZW5kQ2hpbGQoZHVnbWUpO1xyXG4gICAgICAgIHZhciBsYWJlbGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgICAgICAgbGFiZWxhLmNsYXNzTmFtZSA9IFwibGFiZWxhTGlzdGVcIjtcclxuICAgICAgICBsYWJlbGEuaW5uZXJIVE1MID0gXCJMaXN0YSBpemFicmFuaWggdGFrbWljYXJhOlwiO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKGxhYmVsYSk7XHJcbiAgICB9O1xyXG4gICAgS2x1Yi5wcm90b3R5cGUuY3J0YWpUZXh0ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgICAgICB2YXIgZWxlbWVudFggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxhYmVsYUxpc3RlXCIpO1xyXG4gICAgICAgIGVsZW1lbnRYLmlubmVySFRNTCArPSBlbGVtZW50LmdldE5hbWUoKSArIFwiIFwiICsgZWxlbWVudC5nZXRTdXJuYW1lKCkgKyBcIjwvYnI+XCI7XHJcbiAgICB9O1xyXG4gICAgS2x1Yi5wcm90b3R5cGUuSXphYmVyaVRha21pY2FyYSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcG9samUgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLmwxXCIpO1xyXG4gICAgICAgIGlmIChwb2xqZS5pbm5lckhUTUwgPT09IFwiXCIpIHtcclxuICAgICAgICAgICAgYWxlcnQoXCJQcm9tZW5pdGUgdGFrbWljYXJhXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmkgPT0gdGhpcy5udW1PZilcclxuICAgICAgICAgICAgdGhpcy5pID0gMDsgLy9pIGplIGluZGVrcyBzbGVkZWNlZyB0YWttaWNhcmEgdSBuaXp1LCB6YXRvIG92YWt2YSBsb2dpa2FcclxuICAgICAgICBpZiAodGhpcy5pID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0SXphYnJhbmlUYWttaWNhcmkoKS5wdXNoKHRoaXMuYXJyW3RoaXMubnVtT2YgLSAxXSk7XHJcbiAgICAgICAgICAgIHRoaXMuY3J0YWpUZXh0KHRoaXMuYXJyW3RoaXMubnVtT2YgLSAxXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vICB0aGlzLmdldEl6YWJyYW5pVGFrbWljYXJpKCkucHVzaCh0aGlzLmFyclt0aGlzLm51bU9mLTFdKTtcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5nZXRJemFicmFuaVRha21pY2FyaSgpLnB1c2godGhpcy5hcnJbdGhpcy5pIC0gMV0pO1xyXG4gICAgICAgICAgICB0aGlzLmNydGFqVGV4dCh0aGlzLmFyclt0aGlzLmkgLSAxXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vdGhpcy5nZXRJemFicmFuaVRha21pY2FyaSgpLnB1c2gobmV3IFRha21pY2FyKHRoaXMuYXJyW3RoaXMuaV0uZ2V0TmFtZSgpLHRoaXMuYXJyW3RoaXMuaV0uZ2V0U3VybmFtZSgpLHRoaXMuYXJyW3RoaXMuaSsrXS5nZXRBZ2UoKSkpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuaXphYnJhbmlUYWttaWNhcmkpO1xyXG4gICAgfTtcclxuICAgIEtsdWIucHJvdG90eXBlLlBva3JlbmlUcmt1ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuaXphYnJhbmlUYWttaWNhcmkuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcclxuICAgICAgICAgICAgZWwuVHJrYWpTZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBLbHViO1xyXG59KCkpO1xyXG5leHBvcnQgeyBLbHViIH07XHJcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcclxuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XHJcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xyXG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcclxuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xyXG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XHJcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxyXG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xyXG4gICAgfVxyXG59O1xyXG52YXIgVGFrbWljYXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUYWttaWNhcihuYW1lLCBzdXJuYW1lLCBhZ2UpIHtcclxuICAgICAgICB0aGlzLm1hcGEgPSBbXHJcbiAgICAgICAgICAgIFwic3RhcnRcIixcclxuICAgICAgICAgICAgXCJyYXZuaWNhXCIsXHJcbiAgICAgICAgICAgIFwiYnJkb1wiLFxyXG4gICAgICAgICAgICBcImtyaXZpbmEgbGV2b1wiLFxyXG4gICAgICAgICAgICBcIm1vc3RcIixcclxuICAgICAgICAgICAgXCJrcml2aW5hIGRlc25vXCIsXHJcbiAgICAgICAgICAgIFwidHVuZWxcIixcclxuICAgICAgICAgICAgXCJLUkFKXCIsXHJcbiAgICAgICAgXTtcclxuICAgICAgICB0aGlzLm51bSA9IDA7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnN1cm5hbWUgPSBzdXJuYW1lO1xyXG4gICAgICAgIHRoaXMuYWdlID0gYWdlO1xyXG4gICAgfVxyXG4gICAgVGFrbWljYXIucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZTtcclxuICAgIH07XHJcbiAgICBUYWttaWNhci5wcm90b3R5cGUuZ2V0U3VybmFtZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdXJuYW1lO1xyXG4gICAgfTtcclxuICAgIFRha21pY2FyLnByb3RvdHlwZS5nZXRBZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWdlO1xyXG4gICAgfTtcclxuICAgIFRha21pY2FyLnByb3RvdHlwZS52cmF0aVBvemljaWp1ID0gZnVuY3Rpb24gKGJyb2osIHZyZW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5udW0gPCBfdGhpcy5tYXBhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoXCJUYWttaWNhcjpcIiArIF90aGlzLmdldE5hbWUoKSArIFwiIFwiICsgX3RoaXMuZ2V0U3VybmFtZSgpICsgXCIgc2UgbmFsYXppIG5hIG1lc3R1OiBcIiArIF90aGlzLm1hcGFbX3RoaXMubnVtKytdICsgXCIgdSB0cmVudXRrdTogXCIgKyAoRGF0ZS5ub3coKSAtIHZyZW1lKSAvIDEwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMubnVtKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoXCJUYWttaWNhcjogXCIgKyBfdGhpcy5nZXROYW1lKCkgKyBcIiBcIiArIF90aGlzLmdldFN1cm5hbWUoKSArIFwiIFphdnJzaW8gc2FtIHRya3UhXCIpOyAvLyB1IHJlc29sdmUgc3RhdmxqYXMgcG92cmF0bnUgdnJlZG5vc3RcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgYnJvaiAqIDEwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgVGFrbWljYXIucHJvdG90eXBlLmNydGFqS29udGVqbmVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkaXZFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICBkaXZFbGVtZW50LnN0eWxlLm1hcmdpbiA9IFwiMzBweFwiO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gZGl2RWxlbWVudDtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdkVsZW1lbnQpO1xyXG4gICAgfTtcclxuICAgIFRha21pY2FyLnByb3RvdHlwZS5jcnRhalRleHQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgICAgIHZhciBsYWJlbGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgICAgICAgbGFiZWxhLmlubmVySFRNTCArPSBlbGVtZW50ICsgXCI8L2JyPlwiO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKGxhYmVsYSk7XHJcbiAgICB9O1xyXG4gICAgVGFrbWljYXIucHJvdG90eXBlLlRya2FqU2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgYnJvaiwgc3RhcnQsIF9pLCBfYSwgZWxfMSwgdGV4dDtcclxuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYikge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJvaiA9IChNYXRoLnJhbmRvbSgpICogMTApICUgMztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcnRhaktvbnRlam5lcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9pID0gMCwgX2EgPSB0aGlzLm1hcGE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gMTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKF9pIDwgX2EubGVuZ3RoKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgNF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsXzEgPSBfYVtfaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMudnJhdGlQb3ppY2lqdShicm9qLCBzdGFydCldO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCA9IF9iLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcnRhalRleHQodGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfYi5sYWJlbCA9IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBfaSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCAxXTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6IHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFRha21pY2FyO1xyXG59KCkpO1xyXG5leHBvcnQgeyBUYWttaWNhciB9O1xyXG4iLCJpbXBvcnQgeyBLbHViIH0gZnJvbSBcIi4vS2x1YlwiO1xyXG5pbXBvcnQgeyBUYWttaWNhciB9IGZyb20gXCIuL1Rha21pY2FyXCI7XHJcbnZhciBrbHViID0gbmV3IEtsdWIoMTApO1xyXG52YXIgdDEgPSBuZXcgVGFrbWljYXIoXCJGaWxpcFwiLCBcIlRyYWprb3ZpY1wiLCAyMik7XHJcbnZhciB0MiA9IG5ldyBUYWttaWNhcihcIk1hcmtvXCIsIFwiVHJpZnVub3ZpY1wiLCAxMik7XHJcbnZhciB0MyA9IG5ldyBUYWttaWNhcihcIlNsYXZrb1wiLCBcIk1hcmtvdmljXCIsIDMyKTtcclxudmFyIHQ0ID0gbmV3IFRha21pY2FyKFwiU3RhbmlzbGF2XCIsIFwiU3RlZmFub3ZpY1wiLCAyNSk7XHJcbnZhciB0NSA9IG5ldyBUYWttaWNhcihcIlN0ZWZhblwiLCBcIlRyYWprb2ljXCIsIDI0KTtcclxudmFyIHQ2ID0gbmV3IFRha21pY2FyKFwiTmlrb2xhXCIsIFwiU2xhdmtvdmljXCIsIDEzKTtcclxua2x1Yi5hZGRUYWttaWNhcih0MSk7XHJcbmtsdWIuYWRkVGFrbWljYXIodDIpO1xyXG5rbHViLmFkZFRha21pY2FyKHQzKTtcclxua2x1Yi5hZGRUYWttaWNhcih0NCk7XHJcbmtsdWIuYWRkVGFrbWljYXIodDUpO1xyXG5rbHViLmFkZFRha21pY2FyKHQ2KTtcclxuY29uc29sZS5sb2coa2x1Yik7XHJcbnZhciBuYXNsb3YgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XHJcbm5hc2xvdi5jbGFzc05hbWUgPSBcIk5hc2xvdlwiO1xyXG5uYXNsb3YuaW5uZXJIVE1MID0gXCJBcGxpa2FjaWphIHphIHRya2FuamUgdGFrbWljYXJhXCI7XHJcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobmFzbG92KTtcclxudmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcclxuZGl2LmNsYXNzTmFtZSA9IFwiZGl2MVwiO1xyXG5rbHViLmRyYXcoZGl2KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==